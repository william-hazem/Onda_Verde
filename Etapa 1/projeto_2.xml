<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Place global declarations here.

const int N = 4;         // número de semáforos
int cont = 0;            // contador de paradas
typedef int[0,N-1] id_t;

clock g_time = 0;        // tempo global

typedef struct {
    int red;
    int green;
    int yellow;
} delay_t;

chan start[N];
chan a, b;

chan scl;

chan green8S[N];
chan ss_red[N];

bool isOpen[N];
bool neverHappen;


chan semOpen[N];
chan semClose[N];
chan semWarn[N];

broadcast chan tick;</declaration>
	<template>
		<name>Trajeto</name>
		<parameter>const int t1, const int t2, const int t3, const int t4, const int t5</parameter>
		<declaration>clock et_time; // tempo de viagem efetivo
clock tt_time; // tempo total desde o inicio do trajeto</declaration>
		<location id="id0" x="-1156" y="-340">
			<name x="-1224" y="-374">Posto</name>
		</location>
		<location id="id1" x="-705" y="-340">
			<name x="-715" y="-374">T1</name>
			<urgent/>
		</location>
		<location id="id2" x="-323" y="-340">
			<name x="-333" y="-374">T2</name>
			<urgent/>
		</location>
		<location id="id3" x="-323" y="-85">
			<name x="-306" y="-94">T3</name>
			<urgent/>
		</location>
		<location id="id4" x="-740" y="-85">
			<name x="-750" y="-119">T4</name>
			<urgent/>
		</location>
		<location id="id5" x="-901" y="-85">
			<name x="-911" y="-119">d4_g</name>
		</location>
		<location id="id6" x="-875" y="-340">
			<name x="-892" y="-374">d0_1</name>
		</location>
		<location id="id7" x="-510" y="-340">
			<name x="-528" y="-374">d1_2</name>
		</location>
		<location id="id8" x="-323" y="-204">
			<name x="-306" y="-213">d2_3</name>
		</location>
		<location id="id9" x="-510" y="-85">
			<name x="-518" y="-119">d3_4</name>
		</location>
		<location id="id10" x="-612" y="-425">
			<name x="-637" y="-459">WaitT1</name>
		</location>
		<location id="id11" x="-212" y="-280">
			<name x="-187" y="-289">WaitT2</name>
		</location>
		<location id="id12" x="-408" y="17">
			<name x="-425" y="34">WaitT3</name>
		</location>
		<location id="id13" x="-816" y="25">
			<name x="-841" y="42">WaitT4</name>
		</location>
		<location id="id14" x="-1020" y="-85">
			<name x="-1045" y="-119">intermediario</name>
			<urgent/>
		</location>
		<location id="id15" x="-1156" y="-25">
			<name x="-1166" y="-59">Casa</name>
		</location>
		<location id="id16" x="-1156" y="-144">
			<name x="-1166" y="-178">AngryKyller</name>
		</location>
		<init ref="id0"/>
		<transition id="id17">
			<source ref="id14"/>
			<target ref="id16"/>
			<label kind="guard" x="-1096" y="-144">cont &gt; 1</label>
		</transition>
		<transition id="id18">
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="guard" x="-1146" y="-93">cont &lt;=1</label>
		</transition>
		<transition id="id19">
			<source ref="id5"/>
			<target ref="id14"/>
			<label kind="guard" x="-1173" y="8">et_time &gt;= t5</label>
		</transition>
		<transition id="id20">
			<source ref="id13"/>
			<target ref="id5"/>
			<label kind="guard" x="-969" y="-34">isOpen[3]</label>
			<label kind="synchronisation" x="-969" y="-17">green8S[3] ?</label>
			<label kind="assignment" x="-969" y="0">et_time = 0</label>
		</transition>
		<transition id="id21">
			<source ref="id4"/>
			<target ref="id13"/>
			<label kind="guard" x="-739" y="-51">!isOpen[3]</label>
			<label kind="assignment" x="-731" y="-34">cont++</label>
		</transition>
		<transition id="id22">
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="guard" x="-561" y="-51">isOpen[2]</label>
			<label kind="synchronisation" x="-561" y="-34">green8S[2] ?</label>
			<label kind="assignment" x="-561" y="-17">et_time = 0</label>
		</transition>
		<transition id="id23">
			<source ref="id3"/>
			<target ref="id12"/>
			<label kind="guard" x="-348" y="-51">!isOpen[2]</label>
			<label kind="assignment" x="-348" y="-34">cont++</label>
		</transition>
		<transition id="id24">
			<source ref="id11"/>
			<target ref="id8"/>
			<label kind="guard" x="-255" y="-255">isOpen[1]</label>
			<label kind="synchronisation" x="-255" y="-238">green8S[1] ?</label>
			<label kind="assignment" x="-255" y="-221">et_time=0</label>
		</transition>
		<transition id="id25">
			<source ref="id2"/>
			<target ref="id11"/>
			<label kind="guard" x="-272" y="-357">!isOpen[1]</label>
			<label kind="assignment" x="-272" y="-340">cont++</label>
		</transition>
		<transition id="id26">
			<source ref="id10"/>
			<target ref="id7"/>
			<label kind="guard" x="-569" y="-459">isOpen[0]</label>
			<label kind="synchronisation" x="-569" y="-442">green8S[0] ?</label>
			<label kind="assignment" x="-569" y="-425">et_time=0</label>
		</transition>
		<transition id="id27">
			<source ref="id1"/>
			<target ref="id10"/>
			<label kind="guard" x="-722" y="-433">!isOpen[0]</label>
			<label kind="assignment" x="-722" y="-416">cont++</label>
		</transition>
		<transition id="id28">
			<source ref="id9"/>
			<target ref="id4"/>
			<label kind="guard" x="-671" y="-110">et_time &gt;= t4</label>
			<nail x="-620" y="-85"/>
		</transition>
		<transition id="id29">
			<source ref="id8"/>
			<target ref="id3"/>
			<label kind="guard" x="-306" y="-161">et_time &gt;= t3</label>
		</transition>
		<transition id="id30">
			<source ref="id7"/>
			<target ref="id2"/>
			<label kind="guard" x="-468" y="-374">et_time &gt;= t2</label>
		</transition>
		<transition id="id31">
			<source ref="id0"/>
			<target ref="id6"/>
			<label kind="assignment" x="-1011" y="-340">et_time = 0</label>
		</transition>
		<transition id="id32">
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="guard" x="-858" y="-127">isOpen[3]</label>
			<label kind="assignment" x="-858" y="-110">et_time = 0</label>
		</transition>
		<transition id="id33">
			<source ref="id3"/>
			<target ref="id9"/>
			<label kind="guard" x="-450" y="-144">isOpen[2]</label>
			<label kind="assignment" x="-450" y="-127">et_time = 0</label>
		</transition>
		<transition id="id34">
			<source ref="id2"/>
			<target ref="id8"/>
			<label kind="guard" x="-433" y="-314">isOpen[1]</label>
			<label kind="assignment" x="-433" y="-297">et_time = 0</label>
		</transition>
		<transition id="id35">
			<source ref="id1"/>
			<target ref="id7"/>
			<label kind="guard" x="-663" y="-331">isOpen[0]</label>
			<label kind="assignment" x="-663" y="-314">et_time = 0</label>
		</transition>
		<transition id="id36">
			<source ref="id6"/>
			<target ref="id1"/>
			<label kind="guard" x="-850" y="-365">et_time &gt;=t1</label>
			<label kind="comments" x="-1156" y="-425">dX_Y : Carro se descolando de X para Y</label>
		</transition>
	</template>
	<template>
		<name>semaforo</name>
		<parameter>const int id, const int t0, const delay_t d</parameter>
		<declaration>clock t;
bool started;

void open(const int id) {
    
    isOpen[id] = 1;
    t = 0;
    return;
}

void close(const int id) {
    isOpen[id] = 0;
    t = 0;
    return;
}</declaration>
		<location id="id37" x="-289" y="-17">
			<name x="-298" y="0">RED</name>
		</location>
		<location id="id38" x="-119" y="-161">
			<name x="-110" y="-203">GREEN</name>
		</location>
		<location id="id39" x="43" y="-17">
			<name x="16" y="-1">YELLOW</name>
		</location>
		<location id="id40" x="-425" y="-17">
			<committed/>
		</location>
		<init ref="id40"/>
		<transition id="id41">
			<source ref="id40"/>
			<target ref="id37"/>
			<label kind="assignment" x="-407" y="-17">t:=t0</label>
		</transition>
		<transition id="id42">
			<source ref="id38"/>
			<target ref="id39"/>
			<label kind="guard" x="-25" y="-119">t&gt;=(d.yellow)</label>
			<label kind="synchronisation" x="-8" y="-136">tick?</label>
		</transition>
		<transition id="id43">
			<source ref="id39"/>
			<target ref="id37"/>
			<label kind="guard" x="-153" y="-8">t&gt;=(d.red)</label>
			<label kind="synchronisation" x="-136" y="8">tick?</label>
			<label kind="assignment" x="-153" y="25">t:=0,
close(id)</label>
		</transition>
		<transition id="id44">
			<source ref="id37"/>
			<target ref="id38"/>
			<label kind="guard" x="-306" y="-127">t&gt;= (d.green)</label>
			<label kind="synchronisation" x="-272" y="-144">tick?</label>
			<label kind="assignment" x="-280" y="-110">open(id)</label>
		</transition>
	</template>
	<template>
		<name>StartSys</name>
		<declaration>clock t;</declaration>
		<location id="id45" x="-1946" y="-1436">
			<name x="-1963" y="-1478">loop</name>
		</location>
		<init ref="id45"/>
		<transition id="id46">
			<source ref="id45"/>
			<target ref="id45"/>
			<label kind="guard" x="-1886" y="-1530">t &gt; 1 and t &lt; 12</label>
			<label kind="synchronisation" x="-1886" y="-1513">tick!</label>
			<label kind="assignment" x="-1886" y="-1496">t:=0</label>
			<nail x="-1904" y="-1496"/>
			<nail x="-1836" y="-1496"/>
			<nail x="-1836" y="-1394"/>
			<nail x="-1904" y="-1394"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">semaforo_old</name>
		<parameter>const id_t id, const delay_t delay, const int t0</parameter>
		<declaration>// Place local declarations here.
clock t = 0;</declaration>
		<location id="id47" x="-501" y="-178">
			<name x="-527" y="-212">Startup</name>
		</location>
		<location id="id48" x="-102" y="-280">
			<name x="-119" y="-314">GREEN</name>
		</location>
		<location id="id49" x="-102" y="-178">
			<name x="-128" y="-161">YELLOW</name>
		</location>
		<location id="id50" x="-340" y="-178">
			<name x="-348" y="-161">RED</name>
		</location>
		<init ref="id47"/>
		<transition id="id51">
			<source ref="id47"/>
			<target ref="id50"/>
			<label kind="guard" x="-442" y="-178">t &gt; t0</label>
			<label kind="synchronisation" x="-459" y="-203">start[id]?</label>
			<label kind="assignment" x="-442" y="-161">t = 0</label>
		</transition>
		<transition id="id52">
			<source ref="id49"/>
			<target ref="id50"/>
			<label kind="guard" x="-297" y="-169">t &gt;= delay.yellow</label>
			<label kind="assignment" x="-297" y="-152">t = 0</label>
		</transition>
		<transition id="id53">
			<source ref="id48"/>
			<target ref="id49"/>
			<label kind="guard" x="-93" y="-254">t &gt;=delay.green</label>
			<label kind="assignment" x="-93" y="-237">t = 0</label>
		</transition>
		<transition id="id54">
			<source ref="id50"/>
			<target ref="id48"/>
			<label kind="guard" x="-306" y="-322">t &gt;= delay.red</label>
			<label kind="assignment" x="-306" y="-305">t = 0</label>
			<nail x="-340" y="-280"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

const int td1 = 0;
const int td2 = 8;
const int td3 = 16;
const int td4 = 24;
const delay_t delay = {20, 22, 32};

s1 = semaforo(0, td1, delay);
s2 = semaforo(1, td2, delay);
s3 = semaforo(2, td3, delay);
s4 = semaforo(3, td4, delay);

// tempo do trajeto (em segundos)

const int t1 = 109;
const int t2 = 12;
const int t3 = 14;
const int t4 = 16;
const int t5 = 8;

t = Trajeto(t1, t2, t3, t4, t5);

// List one or more processes to be composed into a system.
system s1, s2, s3, s4, t, StartSys;
//system s1, s2, s3, s4, t, StartSys;

</system>
	<queries>
		<option key="--exploration" value="0"/>
		<query>
			<formula>A[] (!s1.YELLOW) and (!s2.YELLOW) and (!s3.YELLOW) and (!s4.YELLOW)</formula>
			<comment>não pode ter todos os semáforos em amarelo</comment>
			<result outcome="failure" type="quality" timestamp="2024-05-14 09:02:47 -0300">
				<option key="--exploration" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; (s1.GREEN) and (s2.GREEN) and (s3.GREEN) and (s4.GREEN)</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-05-14 02:50:58 -0300">
				<option key="--exploration" value="0"/>
			</result>
		</query>
		<query>
			<formula>==== Verificação básica de reachability</formula>
			<comment/>
		</query>
		<query>
			<formula>E&lt;&gt; t.T1</formula>
			<comment>Verifica se T1 eventualmente ocorre</comment>
			<result outcome="success" type="quality" timestamp="2024-05-14 02:51:08 -0300">
				<option key="--exploration" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; t.T2</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-05-14 02:51:10 -0300">
				<option key="--exploration" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; t.T3</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-05-14 02:51:12 -0300">
				<option key="--exploration" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; t.T4</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-05-14 02:51:14 -0300">
				<option key="--exploration" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; t.Casa</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-05-14 02:51:20 -0300">
				<option key="--exploration" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; t.Casa and cont == 0</formula>
			<comment>Existe algum caminho em o local Casa é atingindo cujo contador de parados é nulo?</comment>
			<result outcome="success" type="quality" timestamp="2024-05-14 02:51:31 -0300">
				<option key="--exploration" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; (t.Casa) and !(cont &gt; 1)</formula>
			<comment>Existe algum caminho em o local Casa é atingindo cujo contador de parados não é maior que 1?</comment>
			<result outcome="success" type="quality" timestamp="2024-05-14 02:51:46 -0300">
				<option key="--exploration" value="0"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt; t.AngryKyller</formula>
			<comment/>
		</query>
		<query>
			<formula>A[] t.Casa imply cont &lt;= 1</formula>
			<comment>Para todos os estados no local Casa, implica que cont é menor ou igual a 1</comment>
		</query>
		<query>
			<formula>==== Verifica travamentos</formula>
			<comment/>
		</query>
		<query>
			<formula>E[] not s1.GREEN</formula>
			<comment>Existem algum caminho que s1 está sempre verde</comment>
			<result outcome="success" type="quality" timestamp="2024-05-14 02:53:54 -0300">
				<option key="--exploration" value="0"/>
			</result>
		</query>
		<query>
			<formula>E[] not s1.YELLOW</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-05-13 16:31:09 -0300">
				<option key="--exploration" value="0"/>
			</result>
		</query>
		<query>
			<formula>E[] not t.T1</formula>
			<comment>Existe algum caminho, em que todos os estados são t.P1</comment>
			<result outcome="success" type="quality" timestamp="2024-05-14 02:54:08 -0300">
				<option key="--exploration" value="0"/>
			</result>
		</query>
		<query>
			<formula>A[] not deadlock</formula>
			<comment>Verifica se o sistema têm deadlock</comment>
		</query>
	</queries>
</nta>
